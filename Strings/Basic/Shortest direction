Problem Statement:
A person wants to go from origin to a particular location, he can move in only 4 directions(i.e East, West, North, South) but his friend gave him a long route,
help a person to find minimum Moves so that he can reach to the destination.
Note: You need to print the lexicographically sorted string. Assume the string will have only ‘E’ ‘N’ ‘S’ ‘W’ characters.

Solution:
String shortestPath (String S)
    {
        String str="";
        int N=0,St=0,W=0,E=0;
        for(int i=0;i<S.length();++i)
        {
            if(S.charAt(i)=='S')
                ++St;
            else if(S.charAt(i)=='N')
                ++N;
            else if(S.charAt(i)=='E')
                ++E;
            else
                ++W;
        }
        if(N>St)
        {
            N-=St;
            St=0;
        }
        else
        {
            St-=N;
            N=0;
        }
        if(E>W)
        {
            E-=W;
            W=0;
        }
        else
        {
            W-=E;
            E=0;
        }
        for(int i=0;i<E;++i)
            str+='E';
        for(int i=0;i<N;++i)
            str+='N';
        for(int i=0;i<St;++i)
            str+='S';
        for(int i=0;i<W;++i)
            str+='W';
        return str;
    }
